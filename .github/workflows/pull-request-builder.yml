name: Pull Request Builder

on:
  pull_request:
  push:
    branches:
      - master
      - develop

env:
  GRADLE_USER_HOME: .gradle
  SLACK-NOS: ${{ secrets.SLACK_NOS }}

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source-code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Synchronise cache 1/2
        uses: actions/cache@v1
        with:
          path: .gradle/wrapper
          key: gradle-cache-wrapper-${{ hashFiles('**/build.gradle') }}

      - name: Synchronise cache 2/2
        uses: actions/cache@v1
        with:
          path: .gradle/caches
          key: gradle-cache-caches-${{ hashFiles('**/build.gradle') }}

      - name: Build
        run: ./gradlew --no-daemon build

      - name: Upload Static Analysis for core
        uses: actions/upload-artifact@v1.0.0
        if: success() || failure()
        with:
          name: static-analysis-core
          path: core/build/reports

      - name: Upload Static Analysis for demo
        uses: actions/upload-artifact@v1.0.0
        if: success() || failure()
        with:
          name: static-analysis-demo
          path: demo/build/reports

      - name: Upload Unit Tests for core
        uses: actions/upload-artifact@v1.0.0
        if: success() || failure()
        with:
          name: unit-tests-core
          path: core/build/test-results

      - name: Upload Unit Tests for demo
        uses: actions/upload-artifact@v1.0.0
        if: success() || failure()
        with:
          name: unit-tests-demo
          path: demo/build/test-results

      - uses: rlespinasse/github-slug-action@master

      - name: Upload snapshot
        if: env.GITHUB_REF_SLUG == 'develop'
        run: ./gradlew bintrayUpload -PdryRun=false -PbintraySnapshot=true -PbintrayOrg=${{ secrets.BINTRAY_ORG }} -PbintrayRepo=${{ secrets.BINTRAY_REPO_SNAPSHOT }} -PbintrayUser=${{ secrets.BINTRAY_USER }} -PbintrayKey=${{ secrets.BINTRAY_KEY_SNAPSHOT }}

      - name: Notify slack if success
        if: env.GITHUB_REF_SLUG == 'develop' && success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"attachments": [{"color": "good","text": "New No-Player <https://bintray.com/novoda-oss/snapshots/no-player|snapshot> available"}]}' $SLACK-NOS

      - name: Notify slack if failure
        if: env.GITHUB_REF_SLUG == 'develop' && failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"attachments": [{"color": "danger","text": "No-Player snapshot build failed"}]}' $SLACK-NOS

      - name: Upload release
        if: env.GITHUB_REF_SLUG == 'master'
        run: ./gradlew bintrayUpload -PdryRun=false -PbintraySnapshot=false -PbintrayOrg=${{ secrets.BINTRAY_ORG }} -PbintrayRepo=${{ secrets.BINTRAY_REPO_RELEASE }} -PbintrayUser=${{ secrets.BINTRAY_USER }} -PbintrayKey=${{ secrets.BINTRAY_KEY_RELEASE }}

      - name: Notify slack if success
        if: env.GITHUB_REF_SLUG == 'master' && success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"attachments": [{"color": "good","text": "New No-Player <https://bintray.com/novoda-oss/maven/no-player|release> available"}]}' $SLACK-NOS

      - name: Notify slack if failure
        if: env.GITHUB_REF_SLUG == 'master' && failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"attachments": [{"color": "danger","text": "No-Player release (master) build failed"}]}' $SLACK-NOS
